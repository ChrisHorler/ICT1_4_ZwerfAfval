@using BlazorBootstrap
@using BlazorBootstrap.Components
@using Frontend_Dashboard.Components.Models
@using Frontend_Dashboard.Components.Services
@using Microsoft.AspNetCore.Components
@inject IAnalyticsDataService AnalyticsDataService
@inject DateService dateService

<div class="analytics-layout">
    <LineChart @ref="lineChart" Width="800" Height="400" />
</div>

@code
{
    [Parameter] public List<LineGraphDto> Data { get; set; } = new();

    private LineChart        lineChart  = new();
    private ChartData        chartData  = new();
    private LineChartOptions chartOptions  = new();

    private bool chartReady = false;
    
    protected override void OnInitialized()
    {
        dateService.PropertyChanged += (_, _) => InvokeAsync(StateHasChanged);
    }

    protected override async Task OnParametersSetAsync()
    {
        BuildChartData();
        if (chartReady)
            await lineChart.UpdateAsync(chartData, chartOptions);
    }

    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            BuildChartData();
            await lineChart.InitializeAsync(chartData, chartOptions);
            chartReady = true;
        }
    }

    public void BuildChartData()
    {
        var monthStart   = new DateOnly(dateService.SelectedDate.Year,
                                        dateService.SelectedDate.Month, 1);
        var daysInMonth  = DateTime.DaysInMonth(monthStart.Year, monthStart.Month);

        // Array with one slot per calendar day
        var counts = new int[daysInMonth];

        foreach (var dto in Data)
        {
            var d = DateOnly.FromDateTime(dto.TimeStamp);
            if (d.Year == monthStart.Year && d.Month == monthStart.Month)
                counts[d.Day - 1]++;
        }

        var labels = Enumerable.Range(1, daysInMonth)
                               .Select(d => new DateOnly(monthStart.Year, monthStart.Month, d)
                                            .ToString("yyyy-MM-dd"))
                               .ToList();

        var ds = new LineChartDataset
        {
            Label           = "Total detections per day",
            Data            = counts.Select(c => (double?)c).ToList(),
            BackgroundColor = "rgba(54,162,235,.25)",
            BorderColor     = "rgb(54,162,235)",
            BorderWidth     = 2,
            Fill            = true
        };

        chartData = new ChartData
        {
            Labels   = labels,
            Datasets = new List<IChartDataset> { ds }
        };

        chartOptions ??= new LineChartOptions
        {
            Responsive  = true,
            Interaction = new Interaction { Mode = InteractionMode.Index }
        };
    }
}

