@page "/analytics"
@using BlazorBootstrap.Components
@using Zwerfafval_WebApp.Components
@using Zwerfafval_WebApp.Components.Models
@using BlazorBootstrap
@using System.Collections.Generic
@using Zwerfafval_WebApp.Components.Services
@rendermode InteractiveServer
@inject IDetectionDataService DetectionService
@inject DateService DateService


<PageTitle>Analytics</PageTitle>

<h1>Analytics</h1>

<div class="analytics-layout">
    <BarChart @ref="barChart" Width="800" Class="mb-4" />


    <Graph />

</div>

@code {

    private BarChart barChart = default!;
    private BarChartOptions barChartOptions = default!;
    private ChartData chartData = default!;

    protected override void OnInitialized()
    {
        var myLabels = new List<string> { "Grote Markt", "Breda Station", "Chassé Theater", "Breda Castle", "Wilhelmina Park" };
        var myDataSets = new List<IChartDataset>
        {
            new BarChartDataset()
            {
            Label = $"Cigarette butt",
            Data = new List<double?> { 40, 20, 66, 49, 66},
            BackgroundColor = new List<string> { System.Drawing.Color.OrangeRed.ToRgbString()},
            BorderColor = new List<string> { System.Drawing.Color.OrangeRed.ToRgbString()},
            BorderWidth = new List<double> { 0 },
            },
            new BarChartDataset()
            {
            Label = $"Can",
            Data = new List<double?> { 20, 18, 27, 2, 40},
            BackgroundColor = new List<string> { System.Drawing.Color.Cyan.ToRgbString()},
            BorderColor = new List<string> { System.Drawing.Color.Cyan.ToRgbString()},
            BorderWidth = new List<double> { 0 },
            },
            new BarChartDataset()
            {
            Label = $"Plastic Bottle",
            Data = new List<double?> { 2, 7, 22, 13, 8},
            BackgroundColor = new List<string> { System.Drawing.Color.BlueViolet.ToRgbString()},
            BorderColor = new List<string> { System.Drawing.Color.BlueViolet.ToRgbString()},
            BorderWidth = new List<double> { 0 },
            },
        };

        chartData = new ChartData { Labels = myLabels, Datasets = myDataSets };
        barChartOptions = new BarChartOptions
            {
                Responsive = true,
                Interaction = new Interaction { Mode = InteractionMode.Index }
            };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await barChart.InitializeAsync(chartData, barChartOptions);
        }
        await base.OnAfterRenderAsync(firstRender);
    }



}


