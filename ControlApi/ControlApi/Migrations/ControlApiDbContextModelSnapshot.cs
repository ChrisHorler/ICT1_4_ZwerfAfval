// <auto-generated />
using System;
using ControlApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlApi.Migrations
{
    [DbContext(typeof(ControlApiDbContext))]
    partial class ControlApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ControlApi.Data.Entities.Detection", b =>
                {
                    b.Property<int?>("detectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("detectionId"));

                    b.Property<float?>("actualTempC")
                        .HasColumnType("float");

                    b.Property<float>("confidence")
                        .HasColumnType("float");

                    b.Property<float?>("feelsLikeTempC")
                        .HasColumnType("float");

                    b.Property<float>("latitude")
                        .HasColumnType("float");

                    b.Property<float>("longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("trashType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<float?>("windDirection")
                        .HasColumnType("float");

                    b.Property<float?>("windForceBft")
                        .HasColumnType("float");

                    b.HasKey("detectionId");

                    b.ToTable("Detection", (string)null);
                });

            modelBuilder.Entity("ControlApi.Data.Entities.DetectionPOI", b =>
                {
                    b.Property<int>("detectionId")
                        .HasColumnType("int");

                    b.Property<int>("POIID")
                        .HasColumnType("int");

                    b.Property<float>("detectionRadiusM")
                        .HasColumnType("float");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("detectionId", "POIID");

                    b.HasIndex("POIID");

                    b.ToTable("DetectionPOI", (string)null);
                });

            modelBuilder.Entity("ControlApi.Data.Entities.POI", b =>
                {
                    b.Property<int>("POIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("POIID"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("latitude")
                        .HasColumnType("double");

                    b.Property<double>("longitude")
                        .HasColumnType("double");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<long>("osmId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("retrievedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("source")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("POIID");

                    b.ToTable("POI", (string)null);
                });

            modelBuilder.Entity("ControlApi.Data.Entities.Prediction", b =>
                {
                    b.Property<int>("predictionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("predictionId"));

                    b.Property<string>("confidence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("detectionId")
                        .HasColumnType("int");

                    b.Property<string>("modelVersion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("predictedFor")
                        .HasColumnType("datetime(6)");

                    b.HasKey("predictionId");

                    b.HasIndex("detectionId");

                    b.ToTable("Prediction", (string)null);
                });

            modelBuilder.Entity("ControlApi.Data.Entities.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("userId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ControlApi.Data.Entities.DetectionPOI", b =>
                {
                    b.HasOne("ControlApi.Data.Entities.POI", "POI")
                        .WithMany("detectionPOIs")
                        .HasForeignKey("POIID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlApi.Data.Entities.Detection", "detection")
                        .WithMany("detectionPOIs")
                        .HasForeignKey("detectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POI");

                    b.Navigation("detection");
                });

            modelBuilder.Entity("ControlApi.Data.Entities.Prediction", b =>
                {
                    b.HasOne("ControlApi.Data.Entities.Detection", "detection")
                        .WithMany("predictions")
                        .HasForeignKey("detectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("detection");
                });

            modelBuilder.Entity("ControlApi.Data.Entities.Detection", b =>
                {
                    b.Navigation("detectionPOIs");

                    b.Navigation("predictions");
                });

            modelBuilder.Entity("ControlApi.Data.Entities.POI", b =>
                {
                    b.Navigation("detectionPOIs");
                });
#pragma warning restore 612, 618
        }
    }
}
