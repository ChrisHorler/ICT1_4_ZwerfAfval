name: Build & Deploy ControlApi

on:
  push:
    branches: [ main ]
  workflow_dispatch: 

permissions:
  contents: read
  packages: write

env:
  IMAGE_ROOT: ghcr.io/${{ github.repository }}/controlapi
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Normalise Image Name
        run: |
          echo "IMAGE_NAME=$(echo '${{ env.IMAGE_ROOT }}' | tr 'A-Z' 'a-z')" >> $GITHUB_ENV      
      
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Log-in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build & Push ControlApi image
        uses: docker/build-push-action@v5
        with:
          context: ./ControlApi
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          
      - name: Build variable list for Portainer
        run: |
          echo "IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_ENV

      - name: Deploy stack via Portainer API
        run: |
          set -eu

          # 1. Read stack.yml and substitute the three vars
          STACK_CONTENT=$(sed \
            -e "s|\${IMAGE_TAG}|${IMAGE_TAG}|g" \
            -e "s|\${DB_CONNECTION}|${DB_CONNECTION}|g" \
            -e "s|\${JWT_KEY}|${JWT_KEY}|g" \
            stack.yml | base64 -w0)

          # 2. Build the JSON payload Portainer expects
          STACK_JSON=$(jq -n \
            --arg name "controlapi" \
            --arg content "$STACK_CONTENT" \
            --arg endpoint "${PORTAINER_ENDPOINT_ID}" '
            { Name: $name,
              StackFileContent: ($content|@base64d),
              EndpointID: ($endpoint|tonumber),
              ComposeFormat: true,
              Env: [] }')

          # 3. Create or update the stack
          curl -sSk \
            -H "X-API-Key: ${PORTAINER_TOKEN}" \
            -H "Content-Type: application/json" \
            -X POST "${PORTAINER_HOST}/api/stacks/deploy" \
            --data-binary "$STACK_JSON"

        env:
          IMAGE_TAG: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          PORTAINER_HOST: ${{ secrets.PORTAINER_HOST }}
          PORTAINER_TOKEN: ${{ secrets.PORTAINER_TOKEN }}
          PORTAINER_ENDPOINT_ID: ${{ secrets.PORTAINER_ENDPOINT_ID }}